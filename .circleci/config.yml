version: 2.1
parameters:
  weather_is_sunny:
    type: boolean
    default: false

jobs:
  test:
    docker:
      - image: cimg/base:2021.04
    steps:
      - run: sleep $((1 + $RANDOM % 20))
      - run: echo Victory!
      - run:
          name: notifying success
          command: |
            curl -X POST -H 'Content-Type: application/json; charset=UTF-8' -d '{"text" : "Job test success"}' 'https://chat.googleapis.com/v1/spaces/AAAA0TgmC4Q/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=stTAWvo7dO7lF0mU56XQDmJ3XpA9JlIcQhfyJwu6ulA%3D'
          when: on_success
      - run:
          name: notifying failure
          command: |
            curl -X POST -H 'Content-Type: application/json; charset=UTF-8' -d '{"text" : "Job test failed"}' 'https://chat.googleapis.com/v1/spaces/AAAA0TgmC4Q/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=stTAWvo7dO7lF0mU56XQDmJ3XpA9JlIcQhfyJwu6ulA%3D'
          when: on_fail
  pythonbuild:
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout
      - restore_cache:
          keys:
            - pydeps-{{ checksum "requirements.txt" }}
      - run: pip3 install -r requirements.txt
      - save_cache:
          paths:
            - ~/.pyenv/versions
          key: pydeps-{{ checksum "requirements.txt" }}
workflows:
  version: 2
  build_and_test:
    when:
      and:
        - equal: [ conditions, << pipeline.git.branch >> ]
        - not: << pipeline.parameters.weather_is_sunny >>
    jobs:
      - test
      - pythonbuild
